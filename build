#!/usr/bin/env ruby

require "erb"
require "redcarpet"
require "ostruct"

$markdown = Redcarpet::Markdown.new(
  Redcarpet::Render::HTML.new,
  autolink: true,
  space_after_headers: true,
  footnotes: true
)

INDEX_TEMPLATE = File.read("templates/index.html.erb")
JOBS_TEMPLATE = File.read("templates/jobs.html.erb")
UPDATE_TEMPLATE = File.read("templates/update.html.erb")
TEAM_TEMPLATE = File.read("templates/team.html.erb")
PAGE_TEMPLATE = File.read("templates/page.html.erb")
NAV_TEMPLATE = File.read("templates/nav.html.erb")

def page!(template, name, out, src, extra)
  contents = File.read(src)
  attrs = { name: name, body: $markdown.render(contents), nav: to_html(NAV_TEMPLATE, {}) }
  attrs.merge!(extra || {})
  result = to_html(template, attrs)
  File.new("#{out}.html", "w").write(result)
end

def to_html(template, attrs)
  ERB.new(template).result(OpenStruct.new(attrs).instance_eval { binding })
end

page! INDEX_TEMPLATE, "index", "index", "intro.md", {}
page! JOBS_TEMPLATE, "jobs", "jobs", "jobs.md", {}
page! JOBS_TEMPLATE, "jobs-web", "jobs/fae9b81", "jobs-web.md", {}
page! TEAM_TEMPLATE, "team", "team", "team.md", {}
page! PAGE_TEMPLATE, "motivation", "motivation", "motivation.md", {}
page! PAGE_TEMPLATE, "radicle", "radicle", "radicle.md", {}
page! PAGE_TEMPLATE, "updates", "updates/index", "updates.md", {}

[1, 2, 3].each do |n|
  page! UPDATE_TEMPLATE, "update", "updates/#{n}", "updates/#{n}.md", { n: n }
end
